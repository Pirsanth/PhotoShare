.main-container{
  background: #494E6B;
  width: 90%;
  margin: 0 auto;
  margin-top: 30px;
  margin-bottom: 30px;
  padding: 20px;

  display: grid;
  grid-template-columns: 1fr;
  justify-content: center;
  justify-items: center;
  grid-gap: 2em;
}

h3{
}
div.validation{
  color: red;
  margin-top: 5px;
  position: relative;
}
div.validation + *, button[type="submit"]{
  margin-top: 70px;
}
span{
  position: absolute;
  width: 100%;
  text-align: center;
  margin-top: 2px;
  font-size: 19px;
}

label{
  display: block;
  margin-bottom: 5px;
}
input{
  padding: 5px;
}
input[type="file"]{
  display: none;
}
.picture-container{
  border: 3px black solid;
  margin: 0px 30px;
}
.picture-container button{
  border-top: 1px solid black;
}
.picture {
  height: 180px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.picture img{
  height: 180px;
  max-width: 100%;
  /*
  border: 1px red solid;
  */
  vertical-align: bottom;
}
.picture fa-icon{
  font-size: 120px;
}

button{
  padding: 10px;
  width: 100%;
  background: #985E6D;
  border: 0px;
}
form > button{
  border: 1px solid black;
}
input{
  width: 100%;
  border: 2px solid black;
}
input.ng-valid{
  border: 2px solid green;
}
input.ng-invalid.ng-dirty, input.ng-invalid.ng-touched {
  border: 2px solid red;
}
/*
  When repeatPassword is touched or dirtied and the password field is still invalid (even if the user did not
  interact with it), the below ensures that password will have a red border around it to match the error message
  displayed via javascript
*/
div.formGroup.ng-touched > input:first-of-type.ng-invalid, div.formGroup.ng-dirty > input:first-of-type.ng-invalid{
  border: 2px solid red;
}
@media screen and (min-width: 375px){
  .main-container{
    padding: 40px;
  }
}
@media screen and (min-width: 760px){
  .main-container{
    width: 700px;
    grid-template-columns: 1fr 2fr;
    justify-items: stretch;
    grid-column-gap: 2.5em;
    padding: 40px 80px;
  }
  h3{
    grid-column: 1/3;
    justify-self: center;
  }
  .picture-container{
    margin: 0px;
    align-self: start;
  }
  input{
    width: auto;
  }
  span{
    text-align: left;
  }
  form button {
    width: auto;
    padding: 15px 50px;
  }
}
@media screen and (min-width: 1024px){
  .main-container{
    width: 900px;
    padding: 40px 120px;
    grid-column-gap: 4em
  }
}
@media screen and (min-width: 1400px){
}
/*
@media screen and (min-width: 375px){
}
@media screen and (min-width: 760px){
  .main-container{
    display: flex;
    flex-direction: column;
    align-items: center;
  }
}
@media screen and (min-width: 1024px){
  .main-container{
    width: 60%;
    align-items: flex-start;
    padding: 80px 10px 80px 120px;
  }
}
@media screen and (min-width: 1400px){
}
*/
